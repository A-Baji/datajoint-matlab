% dj.internal.File - an external storage class for local file stores.
classdef File
    properties (Hidden, Constant)
        % mode = -1(reject), 0(optional), 1(require)
        validation_config = struct( ...
            'datajoint_type', struct( ...
                    'mode', @(datajoint_type) 1, ...
                    'type_check', @(self) ischar(self) && any(strcmpi(...
                        self, {'blob', 'filepath'}))...
                ), ...
            'protocol', struct( ...
                    'mode', @(datajoint_type) 1, ...
                    'type_check', @(self) ischar(self) ...
                ), ...
            'location', struct( ...
                    'mode', @(datajoint_type) 1, ...
                    'type_check', @(self) ischar(self) && exist(self, 'dir')==7 ...
                ), ...
            'subfolding', struct( ...
                    'mode', @(datajoint_type) -1 + any(strcmpi(datajoint_type, {'blob'})), ...
                    'type_check', @(self) all(floor(self) == self), ...
                    'default', [2; 2] ...
                ) ...
            )
        backward_validation_config = struct( ...
            'protocol', struct( ...
                    'mode', @(unused) 1, ...
                    'type_check', @(self) ischar(self) ...
                ), ...
            'location', struct( ...
                    'mode', @(unused) 1, ...
                    'type_check', @(self) ischar(self) && exist(self, 'dir') ...
                ), ...
            'subfolding', struct( ...
                    'mode', @(unused) 0, ...
                    'type_check', @(self) all(floor(self) == self), ...
                    'default', [2; 2] ...
                ) ...
            )
    end
    properties
        protocol
        datajoint_type
        location
        type_config
    end
    methods (Static)
        function remove_object(external_filepath)
            % delete an object from the store
            delete(external_filepath);
        end
        function upload_buffer(buffer, external_filepath)
            % put blob
            [~,start_idx,~] = regexp(external_filepath, '/', 'match', 'start', 'end');
            mkdir(external_filepath(1:(start_idx(end)-1)));
            fileID = fopen(external_filepath, 'w');
            fwrite(fileID, buffer);
            fclose(fileID);
        end
        function result = download_buffer(external_filepath)
            % get blob
            fileID = fopen(external_filepath, 'r');
            result = fread(fileID);
            fclose(fileID);
        end
    end
    methods
        function self = File(config)
            % initialize store
            self.protocol = config.protocol;
            self.location = strrep(config.location, '\', '/');
            self.type_config = struct();
            
            if dj.internal.ExternalTable.BACKWARD_SUPPORT_DJPY012 && ~any(strcmp(...
                    'datajoint_type', fieldnames(config)))
                self.type_config.subfolding = config.subfolding;
            else
                self.datajoint_type = config.datajoint_type;
                if strcmpi(self.datajoint_type, 'blob')
                    self.type_config.subfolding = config.subfolding;
                end
            end
        end
        function external_filepath = make_external_filepath(self, relative_filepath)
            % resolve the complete external path based on the relative path
            external_filepath = [self.location '/' relative_filepath];
        end
    end
end
